{"ast":null,"code":"const defaultState = {\n  inputValue: \"write something\",\n  list: ['早上4点起床，锻炼身体', '中午下班游泳一小时']\n}; //默认数据\n\nexport default ((state = defaultState, action) => {\n  //就是一个方法函数\n  console.log(state, action);\n\n  if (action.type === 'changeInput') {\n    let newState = JSON.parse(JSON.stringify(state)); //深度拷贝state\n\n    newState.inputValue = action.value;\n    return newState;\n  }\n\n  if (action.type === 'addItem') {\n    //根据type值，编写业务逻辑\n    let newState = JSON.parse(JSON.stringify(state)); //深度拷贝state\n\n    newState.list.push(newState.inputValue); //push新的内容到列表中去\n\n    newState.inputValue = '';\n    return newState;\n  }\n\n  return state;\n});","map":{"version":3,"sources":["D:/我的文档/Desktop/react-demo.git/first_react_app/src/store/reducer.js"],"names":["defaultState","inputValue","list","state","action","console","log","type","newState","JSON","parse","stringify","value","push"],"mappings":"AAAA,MAAMA,YAAY,GAAG;AACjBC,EAAAA,UAAU,EAAE,iBADK;AAEjBC,EAAAA,IAAI,EAAE,CACF,aADE,EAEF,WAFE;AAFW,CAArB,C,CAMG;;AACH,gBAAe,CAACC,KAAK,GAAGH,YAAT,EAAsBI,MAAtB,KAA+B;AAAG;AAC7CC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAoBC,MAApB;;AACA,MAAGA,MAAM,CAACG,IAAP,KAAgB,aAAnB,EAAkC;AAC9B,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAf,CAAX,CAAf,CAD8B,CACkB;;AAChDK,IAAAA,QAAQ,CAACP,UAAT,GAAsBG,MAAM,CAACQ,KAA7B;AACA,WAAOJ,QAAP;AACH;;AAED,MAAGJ,MAAM,CAACG,IAAP,KAAgB,SAAnB,EAA8B;AAAC;AAC3B,QAAIC,QAAQ,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeR,KAAf,CAAX,CAAf,CAD0B,CACsB;;AAChDK,IAAAA,QAAQ,CAACN,IAAT,CAAcW,IAAd,CAAmBL,QAAQ,CAACP,UAA5B,EAF0B,CAEa;;AACvCO,IAAAA,QAAQ,CAACP,UAAT,GAAsB,EAAtB;AACA,WAAOO,QAAP;AACH;;AAGD,SAAOL,KAAP;AACH,CAjBD","sourcesContent":["const defaultState = {\r\n    inputValue: \"write something\",\r\n    list: [\r\n        '早上4点起床，锻炼身体',\r\n        '中午下班游泳一小时'\r\n    ]\r\n}  //默认数据\r\nexport default (state = defaultState,action)=>{  //就是一个方法函数\r\n    console.log(state , action)\r\n    if(action.type === 'changeInput') {\r\n        let newState = JSON.parse(JSON.stringify(state))//深度拷贝state\r\n        newState.inputValue = action.value\r\n        return newState\r\n    }\r\n\r\n    if(action.type === 'addItem') {//根据type值，编写业务逻辑\r\n        let newState = JSON.parse(JSON.stringify(state))//深度拷贝state\r\n        newState.list.push(newState.inputValue)//push新的内容到列表中去\r\n        newState.inputValue = ''\r\n        return newState\r\n    }\r\n    \r\n\r\n    return state\r\n}\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}